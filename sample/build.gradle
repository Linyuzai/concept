plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
    id 'java'
}

group = 'com.github.linyuzai'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    /*compile "com.github.linyuzai:concept-download-spring-boot-starter:1.2.0"
    compile "com.github.linyuzai:concept-download-source-okhttp:1.2.0"
    compile "com.github.linyuzai:concept-download-load-coroutines:1.2.0"*/
    implementation project(path: ':concept-download:concept-download-core', configuration: 'default')
    implementation project(path: ':concept-download:concept-download-source-okhttp', configuration: 'default')
    implementation project(path: ':concept-download:concept-download-load-coroutines', configuration: 'default')
    implementation project(path: ':concept-download:concept-download-spring-boot-starter', configuration: 'default')

    //compile "com.github.linyuzai:concept-sync-waiting:1.0.0"
    implementation project(path: ':concept-sync-waiting', configuration: 'default')

    //compile "com.github.linyuzai:concept-plugin-jar:1.0.1"
    implementation project(path: ':concept-plugin:concept-plugin-core', configuration: 'default')
    implementation project(path: ':concept-plugin:concept-plugin-jar', configuration: 'default')

    implementation project(path: ':concept-event:concept-event-core', configuration: 'default')
    implementation project(path: ':concept-event:concept-event-kafka', configuration: 'default')
    implementation project(path: ':concept-event:concept-event-rabbitmq', configuration: 'default')
    implementation project(path: ':concept-event:concept-event-spring-boot-starter', configuration: 'default')

    implementation project(path: ':concept-connection-loadbalance:concept-connection-loadbalance-core', configuration: 'default')
    implementation project(path: ':concept-connection-loadbalance:concept-connection-loadbalance-websocket', configuration: 'default')
    implementation project(path: ':concept-connection-loadbalance:concept-connection-loadbalance-autoconfigure', configuration: 'default')
    implementation project(path: ':concept-connection-loadbalance:concept-websocket-loadbalance-spring-boot-starter', configuration: 'default')

    //compileOnly 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    /*implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }*/
    //implementation 'org.springframework.boot:spring-boot-starter-undertow'
    //implementation 'org.springframework.boot:spring-boot-starter-jetty'

    //implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    implementation 'org.apache.httpcomponents:httpclient:4.5.2'

    //implementation 'io.springfox:springfox-swagger2:2.9.2'
    //implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    implementation 'org.springframework.kafka:spring-kafka'

    implementation 'io.socket:socket.io-server:4.0.1'

    implementation 'org.springframework.cloud:spring-cloud-starter'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudDependencyManagementVersion}"
    }
}

test {
    useJUnitPlatform()
}

//bootJar.enabled = false
//jar.enabled = true