apply from: '../allprojects.gradle'

apply plugin: 'java-library'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

//apply plugin: 'org.jetbrains.kotlin.jvm'
//apply plugin: 'org.jetbrains.dokka'

version = '0.0.1-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {

    implementation project(path: ':concept-domain:concept-domain-core', configuration: 'default')
    implementation project(path: ':concept-domain:concept-domain-mbp', configuration: 'default')
    compileOnly "com.baomidou:mybatis-plus-boot-starter:${MyBatisPlusVersion}"

    implementation project(path: ':concept-cloud:concept-cloud-web', configuration: 'default')

    /*implementation "com.github.linyuzai:concept-inherit-processor:1.0.0"
    annotationProcessor "com.github.linyuzai:concept-inherit-processor:1.0.0"*/

    implementation project(path: ':concept-inherit:concept-inherit-core', configuration: 'default')
    //implementation project(path: ':concept-inherit:concept-inherit-processor', configuration: 'default')
    //annotationProcessor project(path: ':concept-inherit:concept-inherit-processor', configuration: 'default')

    //implementation 'com.github.linyuzai:concept-mapqueue-core:1.1.0'
    implementation project(path: ':concept-mapqueue:concept-mapqueue-core', configuration: 'default')

    /*compile "com.github.linyuzai:concept-download-spring-boot-starter:1.2.0"
    compile "com.github.linyuzai:concept-download-source-okhttp:1.2.0"
    compile "com.github.linyuzai:concept-download-load-coroutines:1.2.0"*/
    implementation project(path: ':concept-download:concept-download-core', configuration: 'default')
    //implementation project(path: ':concept-download:concept-download-source-okhttp', configuration: 'default')
    implementation project(path: ':concept-download:concept-download-coroutines', configuration: 'default')
    implementation project(path: ':concept-download:concept-download-spring-boot-starter', configuration: 'default')

    //compile "com.github.linyuzai:concept-sync-waiting:1.0.0"
    implementation project(path: ':concept-sync-waiting:concept-sync-waiting-core', configuration: 'default')

    //compile "com.github.linyuzai:concept-plugin-jar:1.0.1"
    implementation project(path: ':concept-plugin:concept-plugin-core', configuration: 'default')
    implementation project(path: ':concept-plugin:concept-plugin-jar', configuration: 'default')

    //compile "com.github.linyuzai:concept-event-spring-boot-starter:0.5.0"
    implementation project(path: ':concept-event:concept-event-core', configuration: 'default')
    implementation project(path: ':concept-event:concept-event-kafka', configuration: 'default')
    implementation project(path: ':concept-event:concept-event-rabbitmq', configuration: 'default')
    implementation project(path: ':concept-event:concept-event-spring-boot-starter', configuration: 'default')

    //implementation "com.github.linyuzai:concept-websocket-loadbalance-spring-boot-starter:2.1.0"
    implementation project(path: ':concept-connection-loadbalance:concept-connection-loadbalance-core', configuration: 'default')
    implementation project(path: ':concept-connection-loadbalance:concept-connection-loadbalance-websocket', configuration: 'default')
    implementation project(path: ':concept-connection-loadbalance:concept-connection-loadbalance-netty', configuration: 'default')
    implementation project(path: ':concept-connection-loadbalance:concept-connection-loadbalance-autoconfigure', configuration: 'default')
    implementation project(path: ':concept-connection-loadbalance:concept-websocket-loadbalance-spring-boot-starter', configuration: 'default')
    implementation project(path: ':concept-connection-loadbalance:concept-netty-loadbalance-spring-boot-starter', configuration: 'default')

    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    /*implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }*/
    //implementation 'org.springframework.boot:spring-boot-starter-undertow'
    //implementation 'org.springframework.boot:spring-boot-starter-jetty'

    implementation 'org.apache.httpcomponents:httpclient:4.5.2'

    //implementation 'io.springfox:springfox-swagger2:2.9.2'
    //implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    implementation 'io.socket:socket.io-server:4.0.1'

    //compileOnly 'org.springframework.cloud:spring-cloud-starter'
    //compileOnly 'org.springframework.cloud:spring-cloud-loadbalancer'

    compileOnly 'org.springframework.boot:spring-boot-starter'
    //compileOnly 'org.springframework.boot:spring-boot-starter-aop'
    //compileOnly 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.springframework.boot:spring-boot-starter-webflux'
    //compileOnly 'org.springframework.boot:spring-boot-starter-websocket'
    compileOnly 'org.springframework.boot:spring-boot-starter-amqp'

    compileOnly 'org.springframework.kafka:spring-kafka'

    compileOnly 'mysql:mysql-connector-java'

    compileOnly 'org.jboss.xnio:xnio-api:3.8.6.Final'
    compileOnly 'io.netty:netty-all:4.1.85.Final'

    //implementation 'org.jetbrains.kotlin:kotlin-stdlib'
    //implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testCompileOnly 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2021.0.4'
        mavenBom 'com.alibaba.cloud:spring-cloud-alibaba-dependencies:2021.1'
    }
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}