plugins {
    id 'java'
    //id 'org.javamodularity.moduleplugin' version '1.7.0'
    id 'org.springframework.boot' version '2.7.6'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.jetbrains.kotlin.jvm' version '1.8.0' //1.6.10
    id 'org.jetbrains.dokka' version '1.6.0'
}

allprojects {

    group = 'com.github.linyuzai'

    repositories {
        mavenCentral()
    }

    if (project.name.contains('intellij') || project.name == 'sample') {
        sourceCompatibility = '17'
        targetCompatibility = '17'
        return
    }

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    apply plugin: 'java-library'
    //apply plugin: "org.javamodularity.moduleplugin"
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    if (project.name == 'concept-download-load-coroutines') {
        apply plugin: 'org.jetbrains.kotlin.jvm'
        apply plugin: 'org.jetbrains.dokka'

        tasks.dokkaJavadoc.configure {
            outputDirectory.set(javadoc.destinationDir)
        }
    }

    dependencies {

        compileOnly 'org.springframework.cloud:spring-cloud-starter'
        compileOnly 'org.springframework.cloud:spring-cloud-loadbalancer'

        compileOnly 'org.springframework.boot:spring-boot-starter'
        compileOnly 'org.springframework.boot:spring-boot-starter-aop'
        compileOnly 'org.springframework.boot:spring-boot-starter-web'
        compileOnly 'org.springframework.boot:spring-boot-starter-webflux'
        compileOnly 'org.springframework.boot:spring-boot-starter-websocket'
        compileOnly 'org.springframework.boot:spring-boot-starter-amqp'

        compileOnly 'org.springframework.kafka:spring-kafka'

        compileOnly 'org.springdoc:springdoc-openapi-ui:1.6.13'
        compileOnly 'com.baomidou:mybatis-plus-boot-starter:3.5.2'

        compileOnly 'org.jboss.xnio:xnio-api:3.8.6.Final'
        compileOnly 'io.netty:netty-all:4.1.85.Final'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        testCompileOnly 'org.junit.jupiter:junit-jupiter-api:5.8.2'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    }

    dependencyManagement {
        imports {
            mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2021.0.4'
            mavenBom 'com.alibaba.cloud:spring-cloud-alibaba-dependencies:2021.1'
        }
    }

    test {
        useJUnitPlatform()
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    bootJar.enabled = false
    jar.enabled = true
    jar.archiveClassifier.set('')
}
/*apply from: 'github.gradle'

subprojects {
    apply plugin: 'java'
    apply plugin: "maven-publish"
    publishing {
        repositories {
            maven {
                name = "Concept"
                url = uri("https://maven.pkg.github.com/linyuzai/concept")
                credentials {
                    username = githubUsername
                    password = githubPassword
                }
            }
        }
        publications {
            gpr(MavenPublication) {
                from(components.java)
            }
        }
    }
}*/
